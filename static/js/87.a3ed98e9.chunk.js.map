{"version":3,"file":"static/js/87.a3ed98e9.chunk.js","mappings":"qSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAOC,EAAMC,GAAb,yFACHP,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNM,MAAOH,EACPC,KAAAA,EACAG,cAAe,QACfC,SAAU,WANY,uBAClBC,EADkB,EAClBA,KADkB,kBASnBA,GATmB,2CAAH,wDAYZC,EAAa,mCAAG,sGACJb,EAASQ,IAAI,uBADT,uBACnBI,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbE,EAAY,mCAAG,WAAOC,GAAP,yFACLf,EAASQ,IAAT,iBAAwBO,IADnB,uBACnBH,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAY,mCAAG,WAAOD,GAAP,yFACLf,EAASQ,IAAT,iBAAwBO,EAAxB,aADK,uBACnBH,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAE,WAAOF,GAAP,yFACJf,EAASQ,IAAT,iBAAwBO,EAAxB,aADI,uBAClBH,EADkB,EAClBA,KADkB,kBAElBA,EAAKM,SAFa,2CAAF,qD,+IC3BzB,EAToB,SAAC,GACnB,OADmC,EAAdC,QACNC,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACjB,2BACE,qCAAaD,MACb,uBAAIC,MAFGP,EADQ,GAMpB,EC6BD,EA9BgB,WAChB,OAA8BQ,EAAAA,EAAAA,YAA9B,eAAOJ,EAAP,KAAgBK,EAAhB,KAEOT,GAAMU,EAAAA,EAAAA,MAANV,GAgBP,IAdAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAGOV,EAAAA,EAAAA,IAAaF,GAHpB,OAGTG,EAHS,OAIfM,EAAWN,GAJI,gDAMNU,EANM,KAMNA,SACTC,QAAQC,IAAIF,EAAShB,KAAKmB,SAPX,yDAAH,qDAUhBJ,GACD,GAAE,CAACZ,IAEDI,EAED,OACE,wBACGA,EAAQa,QAAS,SAAC,EAAD,CAAab,QAASA,KAAa,uEAK1D,C","sources":["components/Api.js","components/pages/reviews/ReviewsList.js","components/pages/reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd649a357c5752881ce25a153e1a07557',\n  },\n});\n\nexport const searchMovies = async (name, page) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: name,\n      page,\n      include_adult: 'false',\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const trendingFilms = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const movieDetails = async (id) => {\n  const {data} = await instance.get (`/movie/${id}`);\n  return data;\n}\n\nexport const movieCredits = async (id) => {\n  const {data} = await instance.get (`/movie/${id}/credits`);\n  return data;\n}\n\nexport const movieReviews= async (id) => {\n  const {data} = await instance.get (`/movie/${id}/reviews`);\n  return data.results;\n}","const ReviewsList = ({ reviews }) => {\n  return reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n};\n\nexport default ReviewsList;\n","import { movieReviews } from \"components/Api\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport ReviewsList from './ReviewsList';\n\nconst Reviews = () => {\nconst [reviews, setReviews] = useState();\n\nconst {id} = useParams();\n\nuseEffect(() => {\n  const fetchPosts = async () => {\n    try {\n\n      const results = await movieReviews(id);\n      setReviews(results);\n      \n    } catch ({ response }) {\n      console.log(response.data.message);\n    }\n  }\n  fetchPosts();\n}, [id]);\n \nif(reviews) {\n\n  return (\n    <ul>\n      {reviews.length ? <ReviewsList reviews={reviews}/> : <h3>We don't have any reviews for this movie.</h3>}\n    </ul>\n  )\n}\n\n}\n\nexport default Reviews"],"names":["instance","axios","baseURL","params","api_key","searchMovies","name","page","get","query","include_adult","language","data","trendingFilms","movieDetails","id","movieCredits","movieReviews","results","reviews","map","author","content","useState","setReviews","useParams","useEffect","fetchPosts","response","console","log","message","length"],"sourceRoot":""}
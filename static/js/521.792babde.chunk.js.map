{"version":3,"file":"static/js/521.792babde.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAOC,EAAMC,GAAb,yFACHP,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNM,MAAOH,EACPC,KAAAA,EACAG,cAAe,QACfC,SAAU,WANY,uBAClBC,EADkB,EAClBA,KADkB,kBASnBA,GATmB,2CAAH,wDAYZC,EAAa,mCAAG,sGACJb,EAASQ,IAAI,uBADT,uBACnBI,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbE,EAAY,mCAAG,WAAOC,GAAP,yFACLf,EAASQ,IAAT,iBAAwBO,IADnB,uBACnBH,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAY,mCAAG,WAAOD,GAAP,yFACLf,EAASQ,IAAT,iBAAwBO,EAAxB,aADK,uBACnBH,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAE,WAAOF,GAAP,yFACJf,EAASQ,IAAT,iBAAwBO,EAAxB,aADI,uBAClBH,EADkB,EAClBA,KADkB,kBAElBA,EAAKM,SAFa,2CAAF,qD,+ICvBzB,EAbiB,SAAC,GAChB,OAD6B,EAAXC,KACNC,KAAI,YAA4C,IAAzCL,EAAwC,EAAxCA,GAAIM,EAAoC,EAApCA,UAAWf,EAAyB,EAAzBA,KAAMgB,EAAmB,EAAnBA,aAChCC,EAAK,yCAAqCD,GAChD,OACE,2BACE,gBAAKE,IAAKD,EAAOE,IAAKnB,EAAMoB,MAAM,MAAMC,OAAO,SAC/C,wBAAKrB,KACL,uBAAIe,MAHGN,EAMZ,GACF,ECwBD,EA7Ba,WACX,OAAwBa,EAAAA,EAAAA,YAAxB,eAAOT,EAAP,KAAaU,EAAb,KAEQd,GAAOe,EAAAA,EAAAA,MAAPf,GAcR,IAZAgB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEOhB,EAAAA,EAAAA,IAAaD,GAFpB,OAETG,EAFS,OAGfW,EAAQX,EAAQC,MAHD,gDAINc,EAJM,KAINA,SACTC,QAAQC,IAAIF,EAASrB,KAAKwB,SALX,yDAAH,qDAQhBJ,GACD,GAAE,CAACjB,IAEAI,EAEF,OAEI,yBACE,SAAC,EAAD,CAAUA,KAAMA,KAKzB,C","sources":["components/Api.js","components/pages/cast/CastList.js","components/pages/cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd649a357c5752881ce25a153e1a07557',\n  },\n});\n\nexport const searchMovies = async (name, page) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: name,\n      page,\n      include_adult: 'false',\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const trendingFilms = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const movieDetails = async (id) => {\n  const {data} = await instance.get (`/movie/${id}`);\n  return data;\n}\n\nexport const movieCredits = async (id) => {\n  const {data} = await instance.get (`/movie/${id}/credits`);\n  return data;\n}\n\nexport const movieReviews= async (id) => {\n  const {data} = await instance.get (`/movie/${id}/reviews`);\n  return data.results;\n}","const CastList = ({ cast }) => {\n  return cast.map(({ id, character, name, profile_path }) => {\n    const image = `https://image.tmdb.org/t/p/w500${profile_path}`;\n    return (\n      <li key={id}>\n        <img src={image} alt={name} width='150' height='200'/>\n        <h3>{name}</h3>\n        <p>{character}</p>\n      </li>\n    );\n  });\n};\n\nexport default CastList;\n","import { movieCredits } from 'components/Api';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport CastList from './CastList';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const results = await movieCredits(id);\n        setCast(results.cast);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchPosts();\n  }, [id]);\n\n  if (cast) {\n\n    return (\n\n        <ul>\n          <CastList cast={cast} />\n        </ul>\n\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","name","page","get","query","include_adult","language","data","trendingFilms","movieDetails","id","movieCredits","movieReviews","results","cast","map","character","profile_path","image","src","alt","width","height","useState","setCast","useParams","useEffect","fetchPosts","response","console","log","message"],"sourceRoot":""}